#!/usr/bin/env bash

if [ "$1" = "-h" ] || [ "$1" == "--help" ]; then # help argument
	printf "\n"
	printf "\033[1m  t - the smart tmux session manager\033[0m\n"
	printf "\033[37m  https://github.com/joshmedeski/t-smart-tmux-session-manager\n"
	printf "\n"
	printf "\033[32m  Run interactive mode (no argument)\n"
	printf "\033[34m      t\n"
	printf "\033[34m        ctrl-a list all entries\n"
	printf "\033[34m        ctrl-s list only tmux sessions\n"
	printf "\033[34m        ctrl-d kill tmux session\n"
	printf "\033[34m        ctrl-f find directory\n"
	printf "\033[34m        ctrl-x list only zoxide results\n"
	printf "\n"
	printf "\033[32m  Go to session (matches tmux session, zoxide result, or directory)\n"
	printf "\033[34m      t {name}\n"
	printf "\n"
	printf "\033[32m  Open popup (while in tmux)\n"
	printf "\033[34m      <prefix>+T\n"
	printf "\033[34m        ctrl-a list all entries\n"
	printf "\033[34m        ctrl-s list only tmux sessions\n"
	printf "\033[34m        ctrl-d kill tmux session\n"
	printf "\033[34m        ctrl-f find directory\n"
	printf "\033[34m        ctrl-x list only zoxide results\n"
	printf "\n"
	printf "\033[32m  Show help\n"
	printf "\033[34m      t -h\n"
	printf "\033[34m      t --help\n"
	printf "\n"
	exit 0
fi

CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

tmux ls &>/dev/null
TMUX_STATUS=$?

get_fzf_prompt() {
	local fzf_prompt
	local fzf_default_prompt='>  '
	if [ $TMUX_STATUS -eq 0 ]; then # tmux is running
		fzf_prompt="$(tmux show -gqv '@t-fzf-prompt')"
	fi
	[ -n "$fzf_prompt" ] && echo "$fzf_prompt" || echo "$fzf_default_prompt"
}

BORDER_LABEL=" t - smart tmux session manager "
HEADER=" ^a:all ^s:sessions ^d:kill ^f:find ^x:zoxide"
PROMPT=$(get_fzf_prompt)
ALL_BIND="ctrl-a:change-prompt($PROMPT)+reload($CURRENT_DIR/t-tmux && $CURRENT_DIR/t-zoxide)"
KILL_BIND="ctrl-d:execute-silent(tmux kill-session -t {})+reload($CURRENT_DIR/t-tmux && $CURRENT_DIR/t-zoxide)"
SESSION_BIND="ctrl-s:change-prompt(sessions> )+reload($CURRENT_DIR/t-tmux)"
ZOXIDE_BIND="ctrl-x:change-prompt(zoxide> )+reload($CURRENT_DIR/t-zoxide)"

if fd --version &>/dev/null; then # fd is installed
	FIND_BIND="ctrl-f:change-prompt(fd> )+reload(cd $HOME && echo $HOME; fd --type d --hidden --absolute-path --color never --exclude .git --exclude node_modules)"
else # fd is not installed
	FIND_BIND="ctrl-f:change-prompt(find> )+reload(cd $HOME && find ~+ -type d -name node_modules -prune -o -name .git -prune -o -type d -print)"
fi

if [ $# -eq 0 ]; then             # no argument provided
	if [ "$TMUX" = "" ]; then        # not in tmux
		if [ $TMUX_STATUS -eq 0 ]; then # tmux is running
			RESULT=$(
				("$CURRENT_DIR"/t-tmux && "$CURRENT_DIR"/t-zoxide) | fzf \
					--bind "$ALL_BIND" \
					--bind "$FIND_BIND" \
					--bind "$KILL_BIND" \
					--bind "$SESSION_BIND" \
					--bind "$ZOXIDE_BIND" \
					--border-label "$BORDER_LABEL" \
					--header "$HEADER" \
					--no-sort \
					--prompt "$PROMPT"
			)
		else # tmux is not running
			RESULT=$(
				"$CURRENT_DIR"/t-zoxide | fzf \
					--bind "$FIND_BIND" \
					--bind "$ZOXIDE_BIND" \
					--border-label "$BORDER_LABEL" \
					--header "^f:find ^x:zoxide" \
					--no-sort \
					--prompt "$PROMPT"
			)
		fi
	else # in tmux
		RESULT=$(
			("$CURRENT_DIR"/t-tmux && "$CURRENT_DIR"/t-zoxide) | fzf-tmux \
				--bind "$ALL_BIND" \
				--bind "$FIND_BIND" \
				--bind "$KILL_BIND" \
				--bind "$SESSION_BIND" \
				--bind "$ZOXIDE_BIND" \
				--border-label "$BORDER_LABEL" \
				--header "$HEADER" \
				--no-sort \
				--prompt "$PROMPT" \
				-p 60%,50%
		)
	fi
else # argument provided
	zoxide query "$1" &>/dev/null
	ZOXIDE_RESULT_EXIT_CODE=$?
	if [ $ZOXIDE_RESULT_EXIT_CODE -eq 0 ]; then # zoxide result found
		RESULT=$(zoxide query "$1")
	else # no zoxide result found
		ls "$1" &>/dev/null
		LS_EXIT_CODE=$?
		if [ $LS_EXIT_CODE -eq 0 ]; then # directory found
			RESULT=$1
		else # no directory found
			echo "No directory found."
			exit 1
		fi
	fi
fi

if [ "$RESULT" = "" ]; then # no result
	exit 0                     # exit silently
fi

echo "$HOME" | grep -E "^[a-zA-Z0-9\-_/.@]+$" &>/dev/null # chars safe to use in sed
HOME_SED_SAFE=$?
if [ $HOME_SED_SAFE -eq 0 ]; then
	RESULT="${RESULT/^~/$HOME//}"
fi

zoxide add "$RESULT" &>/dev/null # add to zoxide database
FOLDER=$(basename "$RESULT")
SESSION_NAME=$(echo "$FOLDER" | tr ' .:' '_')

if [ $TMUX_STATUS -eq 0 ]; then                                 # tmux is running
	SESSION=$(tmux list-sessions -F '#S' | grep "^$SESSION_NAME$") # find existing session
else
	SESSION=""
fi

if [ "$TMUX" = "" ]; then                          # not currently in tmux
	if [ "$SESSION" = "" ]; then                      # session does not exist
		tmux new-session -s "$SESSION_NAME" -c "$RESULT" # create session and attach
	else                                              # session exists
		tmux attach -t "$SESSION"                        # attach to session
	fi
else                                                  # currently in tmux
	if [ "$SESSION" = "" ]; then                         # session does not exist
		tmux new-session -d -s "$SESSION_NAME" -c "$RESULT" # create session
		tmux switch-client -t "$SESSION_NAME"               # attach to session
	else                                                 # session exists
		tmux switch-client -t "$SESSION"                    # switch to session
	fi
fi
